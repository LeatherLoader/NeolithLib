//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using NeolithLib.API.Events;

namespace NeolithLib.API
{
	public class DeployableEvents : Facepunch.MonoBehaviour
	{
		private static DeployableEvents mInstance = null;
		
		public DeployableEvents() 
		{
			DeployableEvents.mInstance = this;
		}

		public void Awake()
		{
			DontDestroyOnLoad (this.gameObject);
		}

		public static void RegisterDeployableHandler<T>() where T : UnityEngine.MonoBehaviour
		{
			DeployableEvents.mInstance.gameObject.AddComponent<T> ();
		}

		public static bool InvokeOwnershipTest(DeployableObject target, Controllable user)
		{
			bool isOwner = target.BelongsTo (user);

			if (!isOwner) 
			{
				OwnershipInclusionEvent inclusionEvent = new OwnershipInclusionEvent(user, target);
				target.gameObject.SendMessage("OwnershipInclusionCommand", inclusionEvent, UnityEngine.SendMessageOptions.DontRequireReceiver);
				DeployableEvents.mInstance.gameObject.SendMessage("OwnershipInclusionCommand", inclusionEvent, UnityEngine.SendMessageOptions.DontRequireReceiver);
				isOwner = inclusionEvent.IsIncluded;
			}

			if (isOwner) 
			{
				OwnershipExclusionEvent exclusionEvent = new OwnershipExclusionEvent(user, target);
				target.gameObject.SendMessage("OwnershipExclusionCommand", exclusionEvent, UnityEngine.SendMessageOptions.DontRequireReceiver);
				DeployableEvents.mInstance.gameObject.SendMessage("OwnershipExclusionCommand", exclusionEvent, UnityEngine.SendMessageOptions.DontRequireReceiver);
				isOwner = !exclusionEvent.IsExcluded;
			}

			return isOwner;
		}
	}
}

